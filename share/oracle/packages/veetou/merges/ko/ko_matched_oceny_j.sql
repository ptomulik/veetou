--MERGE INTO v2u_ko_matched_oceny_j tgt
--USING
--    (
--        SELECT
--              ma_trmpro_j.job_uuid
--            , ma_trmpro_j.semester_id
--            , ma_trmpro_j.specialty_id
--            , ma_trmpro_j.subject_id
--            , ma_etpos_j.studend_id
--            , ma_trmpro_j.classes_type
--            , ma_etpos_j.os_id
--            , g_j.subj_grade
--            , g_j.subj_grade_date
--            , oceny.term_prot_nr
--
--        FROM v2u_ko_grades_j g_j
--        INNER JOIN v2u_ko_matched_trmpro_j ma_trmpro_j
--            ON  (
--                        ma_trmpro_j.subject_id = g_j.subject_id
--                    AND ma_trmpro_j.specialty_id = g_j.specialty_id
--                    AND ma_trmpro_j.semester_id = g_j.semester_id
--                    AND ma_trmpro_j.job_uuid = g_j.job_uuid
--                    AND ma_trmpro_j.classes_type = g_j.classes_type
--                )
--        INNER JOIN v2u_ko_matched_etpos_j ma_etpos_j
--            ON  (
--                        ma_etpos_j.student_id = g_j.student_id
--                    AND ma_etpos_j.specialty_id = g_j.specialty_id
--                    AND ma_etpos_j.semester_id = g_j.semester_id
--                    AND ma_etpos_j.job_uuid = g_j.job_uuid
--                )
--        INNER JOIN v2u_semesters semesters
--            ON  (
--                        semesters.code = ma_trmpro_j.cdyd_kod
--                )
--        INNER JOIN v2u_dz_oceny oceny
--            ON  (
--                        oceny.os_id = ma_etpos_j.os_id
--                    AND oceny.prot_id = ma_trmpro_j.prot_id
--                    AND oceny.term_prot_nr = ma_trmpro_j.nr
--                )
--    ) src
--ON  (
--            tgt.job_uuid = src.job_uuid
--        AND tgt.subject_id = src.subject_id
--        AND tgt.specialty_id = src.specialty_id
--        AND tgt.semester_id = src.semester_id
--        AND tgt.classes_type = src.classes_type
--        AND tgt.student_id = src.student_id
--    )
--WHEN NOT MATCHED THEN
--    INSERT
--        ( job_uuid
--        , semester_id
--        , specialty_id
--        , subject_id
--        , classes_type
--        , subject_map_id
--        , classes_map_id
--        , prz_kod
--        , cdyd_kod
--        , tpro_kod
--        , prot_id
--        , nr
--        , subj_grade_date
--        , data_zwrotu
--        )
--    VALUES
--        ( src.job_uuid
--        , src.semester_id
--        , src.specialty_id
--        , src.subject_id
--        , src.classes_type
--        , src.subject_map_id
--        , src.classes_map_id
--        , src.prz_kod
--        , src.cdyd_kod
--        , src.tpro_kod
--        , src.prot_id
--        , src.nr
--        , src.subj_grade_date
--        , src.data_zwrotu
--        )
--WHEN MATCHED THEN
--    UPDATE SET
--          tgt.subject_map_id = src.subject_map_id
--        , tgt.classes_map_id = src.classes_map_id
--        , tgt.prz_kod = src.prz_kod
--        , tgt.cdyd_kod = src.cdyd_kod
--        , tgt.tpro_kod = src.tpro_kod
--        , tgt.prot_id = src.prot_id
--        , tgt.nr = src.nr
--        , tgt.data_zwrotu = src.data_zwrotu
--;

COMMIT;

-- vim: set ft=sql ts=4 sw=4 et:
