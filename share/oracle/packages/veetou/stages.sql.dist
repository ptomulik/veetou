/****************************************************************************
 *                  This file is for SQL Developer users.
 *            Just place a cursor on a command and press F9.
 ****************************************************************************/

-- Disaster prevention (we don't want to run all the commands below at once).
EXIT;


-- Preliminary steps, that may be necessary.
@@tiers/create_tier1.sql;

@@tiers/create_tier2.sql;

@@tiers/create_tier3.sql;

@@merges/ko/execute_tier2_merges1.sql;


--
-- dz_studenci
--
DELETE FROM v2u_dz_studenci;
COMMIT;
@@merges/dz/dz_studenci.sql;



--
-- dz_przedmioty
--
DELETE FROM v2u_dz_przedmioty;
COMMIT;
@@merges/dz/dz_przedmioty.sql;

DELETE FROM v2u_ko_matched_przedm_j;
COMMIT;
@@merges/ko/ko_matched_przedm_j.sql;

DELETE FROM v2u_ko_missing_przedm_j;
COMMIT;
@@merges/ko/ko_missing_przedm_j.sql;

DELETE FROM v2u_uu_przedmioty;
COMMIT;
@@merges/uu/uu_przedmioty.sql;

/*
UPDATE
v2u_dz_przedmioty tgt
-- dz_przedmioty tgt
SET (
              nazwa
            , jed_org_kod
--            , utw_id
--            , utw_data
            , mod_id
--            , mod_data
            , tpro_kod
            , czy_wielokrotne
            , name
            , skrocony_opis
            , short_description
            , jed_org_kod_biorca
            , jzk_kod
            , kod_sok
            , opis
            , description
            , literatura
            , bibliography
            , efekty_uczenia
            , efekty_uczenia_ang
            , kryteria_oceniania
            , kryteria_oceniania_ang
            , praktyki_zawodowe
            , praktyki_zawodowe_ang
            , url
            , kod_isced
            , nazwa_pol
            , guid
            , pw_nazwa_supl
            , pw_nazwa_supl_ang
) = (
*/
        SELECT
              nazwa
            , jed_org_kod
--            , utw_id
--            , utw_data
            , mod_id
--            , mod_data
            , tpro_kod
            , czy_wielokrotne
            , name
            , skrocony_opis
            , short_description
            , jed_org_kod_biorca
            , jzk_kod
            , kod_sok
            , opis
            , description
            , literatura
            , bibliography
            , efekty_uczenia
            , efekty_uczenia_ang
            , kryteria_oceniania
            , kryteria_oceniania_ang
            , praktyki_zawodowe
            , praktyki_zawodowe_ang
            , url
            , kod_isced
            , nazwa_pol
            , guid
            , pw_nazwa_supl
            , pw_nazwa_supl_ang
        FROM v2u_uu_przedmioty src
        WHERE
                src.change_type = 'U'
            AND src.safe_to_change = 1
/*
            AND src.kod = tgt.kod
)
WHERE EXISTS (
    SELECT 1 FROM v2u_uu_przedmioty src
        WHERE
                src.change_type = 'U'
            AND src.safe_to_change = 1
            AND src.kod = tgt.kod
)
*/
;

/*
INSERT INTO
    v2u_dz_przedmioty tgt
-- dz_przedmioty tgt
        ( kod
        , nazwa
        , jed_org_kod
        , utw_id
--        , utw_data
--        , mod_id
--        , mod_data
        , tpro_kod
        , czy_wielokrotne
        , name
        , skrocony_opis
        , short_description
        , jed_org_kod_biorca
        , jzk_kod
        , kod_sok
        , opis
        , description
        , literatura
        , bibliography
        , efekty_uczenia
        , efekty_uczenia_ang
        , kryteria_oceniania
        , kryteria_oceniania_ang
        , praktyki_zawodowe
        , praktyki_zawodowe_ang
        , url
        , kod_isced
        , nazwa_pol
        , guid
        , pw_nazwa_supl
        , pw_nazwa_supl_ang
        )
*/
SELECT
          src.kod
        , src.nazwa
        , src.jed_org_kod
        , src.utw_id
--        , src.utw_data
--        , src.mod_id
--        , src.mod_data
        , src.tpro_kod
        , src.czy_wielokrotne
        , src.name
        , src.skrocony_opis
        , src.short_description
        , src.jed_org_kod_biorca
        , src.jzk_kod
        , src.kod_sok
        , src.opis
        , src.description
        , src.literatura
        , src.bibliography
        , src.efekty_uczenia
        , src.efekty_uczenia_ang
        , src.kryteria_oceniania
        , src.kryteria_oceniania_ang
        , src.praktyki_zawodowe
        , src.praktyki_zawodowe_ang
        , src.url
        , src.kod_isced
        , src.nazwa_pol
        , src.guid
        , src.pw_nazwa_supl
        , src.pw_nazwa_supl_ang
FROM v2u_uu_przedmioty src
WHERE
        src.change_type = 'I'
    AND src.safe_to_change = 1
;

/*
-- MERGE INTO dz_przedmioty tgt
MERGE INTO v2u_dz_przedmioty tgt
USING
    (
*/
        SELECT
              kod
            , nazwa
            , jed_org_kod
            , utw_id
            , utw_data
            , mod_id
            , mod_data
            , tpro_kod
            , czy_wielokrotne
            , name
            , skrocony_opis
            , short_description
            , jed_org_kod_biorca
            , jzk_kod
            , kod_sok
            , opis
            , description
            , literatura
            , bibliography
            , efekty_uczenia
            , efekty_uczenia_ang
            , kryteria_oceniania
            , kryteria_oceniania_ang
            , praktyki_zawodowe
            , praktyki_zawodowe_ang
            , url
            , kod_isced
            , nazwa_pol
            , guid
            , pw_nazwa_supl
            , pw_nazwa_supl_ang
            , change_type
            , safe_to_change
        FROM v2u_uu_przedmioty
        WHERE change_type IN ('I', 'U') AND safe_to_change = 1
/*
    ) src
ON  (
            src.change_type = 'U'
        AND src.kod = tgt.kod
    )
WHEN NOT MATCHED THEN
    INSERT
        ( kod
        , nazwa
        , jed_org_kod
        , utw_id
--        , utw_data
--        , mod_id
--        , mod_data
        , tpro_kod
        , czy_wielokrotne
        , name
        , skrocony_opis
        , short_description
        , jed_org_kod_biorca
        , jzk_kod
        , kod_sok
        , opis
        , description
        , literatura
        , bibliography
        , efekty_uczenia
        , efekty_uczenia_ang
        , kryteria_oceniania
        , kryteria_oceniania_ang
        , praktyki_zawodowe
        , praktyki_zawodowe_ang
        , url
        , kod_isced
        , nazwa_pol
        , guid
        , pw_nazwa_supl
        , pw_nazwa_supl_ang
        )
VALUES
        ( src.kod
        , src.nazwa
        , src.jed_org_kod
        , src.utw_id
--        , src.utw_data
--        , src.mod_id
--        , src.mod_data
        , src.tpro_kod
        , src.czy_wielokrotne
        , src.name
        , src.skrocony_opis
        , src.short_description
        , src.jed_org_kod_biorca
        , src.jzk_kod
        , src.kod_sok
        , src.opis
        , src.description
        , src.literatura
        , src.bibliography
        , src.efekty_uczenia
        , src.efekty_uczenia_ang
        , src.kryteria_oceniania
        , src.kryteria_oceniania_ang
        , src.praktyki_zawodowe
        , src.praktyki_zawodowe_ang
        , src.url
        , src.kod_isced
        , src.nazwa_pol
        , src.guid
        , src.pw_nazwa_supl
        , src.pw_nazwa_supl_ang
        )
WHEN MATCHED THEN
    UPDATE SET
--        , tgt.kod = src.kod
          tgt.nazwa = src.nazwa
        , tgt.jed_org_kod = src.jed_org_kod
--        , tgt.utw_id = src.utw_id
--        , tgt.utw_data = src.utw_data
        , tgt.mod_id = src.mod_id
--        , tgt.mod_data = src.mod_data
        , tgt.tpro_kod = src.tpro_kod
        , tgt.czy_wielokrotne = src.czy_wielokrotne
        , tgt.name = src.name
        , tgt.skrocony_opis = src.skrocony_opis
        , tgt.short_description = src.short_description
        , tgt.jed_org_kod_biorca = src.jed_org_kod_biorca
        , tgt.jzk_kod = src.jzk_kod
        , tgt.kod_sok = src.kod_sok
        , tgt.opis = src.opis
        , tgt.description = src.description
        , tgt.literatura = src.literatura
        , tgt.bibliography = src.bibliography
        , tgt.efekty_uczenia = src.efekty_uczenia
        , tgt.efekty_uczenia_ang = src.efekty_uczenia_ang
        , tgt.kryteria_oceniania = src.kryteria_oceniania
        , tgt.kryteria_oceniania_ang = src.kryteria_oceniania_ang
        , tgt.praktyki_zawodowe = src.praktyki_zawodowe
        , tgt.praktyki_zawodowe_ang = src.praktyki_zawodowe_ang
        , tgt.url = src.url
        , tgt.kod_isced = src.kod_isced
        , tgt.nazwa_pol = src.nazwa_pol
        , tgt.guid = src.guid
        , tgt.pw_nazwa_supl = src.pw_nazwa_supl
        , tgt.pw_nazwa_supl_ang = src.pw_nazwa_supl_ang
*/
;

COMMIT;


--
-- dz_atrybuty_przedmiotow
--
DELETE FROM v2u_dz_atrybuty_przedmiotow;
COMMIT;
@@merges/dz/dz_atrybuty_przedmiotow.sql;

DELETE FROM v2u_uu_atrybuty_przedmiotow;
COMMIT;
@@merges/uu/uu_atrybuty_przedmiotow.sql;

/*
UPDATE
v2u_dz_atrybuty_przedmiotow tgt
-- dz_atrybuty_przedmiotow tgt
SET (
              tatr_kod
            , prz_kod
            , wart_lst_id
            , prz_kod_rel
--            , utw_id
--            , utw_data
            , mod_id
--            , mod_data
            , wartosc
            , wartosc_ang
) = (
*/
        SELECT
              tatr_kod
            , prz_kod
            , wart_lst_id
            , prz_kod_rel
--            , utw_id
--            , utw_data
            , mod_id
--            , mod_data
            , wartosc
            , wartosc_ang
        FROM v2u_uu_atrybuty_przedmiotow src
        WHERE   src.change_type = 'U'
            AND src.safe_to_change = 1
/*
            AND src.id = tgt.id
)
WHERE EXISTS (
    SELECT 1
    FROM v2u_uu_atrybuty_przedmiotow src
    WHERE   src.change_type = 'U'
        AND src.safe_to_change = 1
        AND src.id = tgt.id
)
*/
;

/*
INSERT INTO
    v2u_dz_atrybuty_przedmiotow tgt
-- dz_atrybuty_przedmiotow tgt
        (
          tatr_kod
        , prz_kod
        , wart_lst_id
        , prz_kod_rel
        , utw_id
--        , utw_data
--        , mod_id
--        , mod_data
        , wartosc
        , wartosc_ang
        , id
        )
*/
SELECT
          src.tatr_kod
        , src.prz_kod
        , src.wart_lst_id
        , src.prz_kod_rel
        , src.utw_id
--        , src.utw_data
--        , src.mod_id
--        , src.mod_data
        , src.wartosc
        , src.wartosc_ang
        , id
FROM v2u_uu_atrybuty_przedmiotow src
WHERE
        src.change_type = 'I'
    AND src.safe_to_change = 1
;



/*
-- MERGE INTO dz_atrybuty_przedmiotow tgt
MERGE INTO v2u_dz_atrybuty_przedmiotow tgt
USING
    (
*/
        SELECT
              tatr_kod
            , prz_kod
            , wart_lst_id
            , prz_kod_rel
            , utw_id
            , utw_data
            , mod_id
            , mod_data
            , wartosc
            , wartosc_ang
            , id
            , change_type
            , safe_to_change
        FROM v2u_uu_atrybuty_przedmiotow
        WHERE change_type IN ('I', 'U') AND safe_to_change = 1
/*
    ) src
ON  (
            src.change_type = 'U'
        AND src.id = tgt.id
    )
WHEN NOT MATCHED THEN
    INSERT
        ( tatr_kod
        , prz_kod
        , wart_lst_id
        , prz_kod_rel
        , utw_id
--        , utw_data
--        , mod_id
--        , mod_data
        , wartosc
        , wartosc_ang
--        , id
        )
VALUES
        ( src.tatr_kod
        , src.prz_kod
        , src.wart_lst_id
        , src.prz_kod_rel
        , src.utw_id
--        , src.utw_data
--        , src.mod_id
--        , src.mod_data
        , src.wartosc
        , src.wartosc_ang
--        , src.id
        )
WHEN MATCHED THEN
    UPDATE SET
          tgt.tatr_kod = src.tatr_kod
        , tgt.prz_kod = src.prz_kod
        , tgt.wart_lst_id = src.wart_lst_id
        , tgt.prz_kod_rel = src.prz_kod_rel
--        , tgt.utw_id = src.utw_id
--        , tgt.utw_data = src.utw_data
        , tgt.mod_id = src.mod_id
--        , tgt.mod_data = src.mod_data
        , tgt.wartosc = src.wartosc
        , tgt.wartosc_ang = src.wartosc_ang
*/
;

COMMIT;

--
-- dz_przedmioty_obce
--
DELETE FROM v2u_dz_przedmioty_obce;
COMMIT;
@@merges/dz/dz_przedmioty_obce.sql;

--
-- dz_przedmioty_cykli
--
DELETE FROM v2u_dz_przedmioty_cykli;
COMMIT;
@@merges/dz/dz_przedmioty_cykli.sql;

DELETE FROM v2u_ko_matched_przcykl_j;
COMMIT;
@@merges/ko/ko_matched_przcykl_j.sql;

DELETE FROM v2u_ko_missing_przcykl_j;
COMMIT;
@@merges/ko/ko_missing_przcykl_j.sql;

DELETE FROM v2u_uu_przedmioty_cykli;
COMMIT;
@@merges/uu/uu_przedmioty_cykli.sql;

/*
UPDATE
v2u_dz_przedmioty_cykli tgt
--dz_przedmioty_cykli tgt
SET (
--        , utw_id
--        , utw_data
          mod_id
--        , mod_data
        , tpro_kod
        , uczestnicy
        , url
        , uwagi
        , notes
        , literatura
        , literatura_ang
        , opis
        , opis_ang
        , skrocony_opis
        , skrocony_opis_ang
        , status_sylabusu
        , guid
) = (
*/
        SELECT
--        , utw_id
--        , utw_data
          mod_id
--        , mod_data
        , tpro_kod
        , uczestnicy
        , url
        , uwagi
        , notes
        , literatura
        , literatura_ang
        , opis
        , opis_ang
        , skrocony_opis
        , skrocony_opis_ang
        , status_sylabusu
        , guid
        FROM v2u_uu_przedmioty_cykli src
        WHERE   src.change_type = 'U'
            AND src.safe_to_change = 1
/*
            AND src.prz_kod = tgt.prz_kod
            AND src.cdyd_kod = tgt.cdyd_kod
)
WHERE EXISTS (
    SELECT 1
    FROM v2u_uu_przedmioty_cykli src
    WHERE   src.change_type = 'U'
        AND src.safe_to_change = 1
        AND src.prz_kod = tgt.prz_kod
        AND src.cdyd_kod = tgt.cdyd_kod
)
*/
;

/*
INSERT INTO
    v2u_dz_przedmioty_cykli tgt
--dz_przedmioty_cykli tgt
        ( prz_kod
        , cdyd_kod
        , utw_id
--        , utw_data
--        , mod_id
--        , mod_data
        , tpro_kod
        , uczestnicy
        , url
        , uwagi
        , notes
        , literatura
        , literatura_ang
        , opis
        , opis_ang
        , skrocony_opis
        , skrocony_opis_ang
        , status_sylabusu
        , guid
        )
*/
SELECT
          prz_kod
        , cdyd_kod
        , utw_id
--        , utw_data
--        , mod_id
--        , mod_data
        , tpro_kod
        , uczestnicy
        , url
        , uwagi
        , notes
        , literatura
        , literatura_ang
        , opis
        , opis_ang
        , skrocony_opis
        , skrocony_opis_ang
        , status_sylabusu
        , guid
FROM v2u_uu_przedmioty_cykli src
WHERE
        src.change_type = 'I'
    AND src.safe_to_change = 1
;



/*
-- MERGE INTO dz_przedmioty_cykli tgt
MERGE INTO v2u_dz_przedmioty_cykli tgt
USING
    (
*/
        SELECT
              prz_kod
            , cdyd_kod
            , utw_id
            , utw_data
            , mod_id
            , mod_data
            , tpro_kod
            , uczestnicy
            , url
            , uwagi
            , notes
            , literatura
            , literatura_ang
            , opis
            , opis_ang
            , skrocony_opis
            , skrocony_opis_ang
            , status_sylabusu
            , guid
            , change_type
            , safe_to_change
        FROM v2u_uu_przedmioty_cykli
        WHERE change_type IN ('I', 'U') AND safe_to_change = 1
/*
    ) src
ON  (
            src.change_type = 'U'
        AND tgt.prz_kod = src.prz_kod
        AND tgt.cdyd_kod = src.cdyd_kod
    )
WHEN NOT MATCHED THEN
    INSERT
        ( prz_kod
        , cdyd_kod
        , utw_id
--        , utw_data
--        , mod_id
--        , mod_data
        , tpro_kod
        , uczestnicy
        , url
        , uwagi
        , notes
        , literatura
        , literatura_ang
        , opis
        , opis_ang
        , skrocony_opis
        , skrocony_opis_ang
        , status_sylabusu
        , guid
        )
VALUES
        ( src.prz_kod
        , src.cdyd_kod
        , src.utw_id
--        , src.utw_data
--        , src.mod_id
--        , src.mod_data
        , src.tpro_kod
        , src.uczestnicy
        , src.url
        , src.uwagi
        , src.notes
        , src.literatura
        , src.literatura_ang
        , src.opis
        , src.opis_ang
        , src.skrocony_opis
        , src.skrocony_opis_ang
        , src.status_sylabusu
        , src.guid
        )
WHEN MATCHED THEN
    UPDATE SET
--          tgt.prz_kod = src.prz_kod
--        , tgt.cdyd_kod = src.cdyd_kod,
--          tgt.utw_id = src.utw_id
--        , tgt.utw_data = src.utw_data,
          tgt.mod_id = src.mod_id
--        , tgt.mod_data = src.mod_data
        , tgt.tpro_kod = src.tpro_kod
        , tgt.uczestnicy = src.uczestnicy
        , tgt.url = src.url
        , tgt.uwagi = src.uwagi
        , tgt.notes = src.notes
        , tgt.literatura = src.literatura
        , tgt.literatura_ang = src.literatura_ang
        , tgt.opis = src.opis
        , tgt.opis_ang = src.opis_ang
        , tgt.skrocony_opis = src.skrocony_opis
        , tgt.skrocony_opis_ang = src.skrocony_opis_ang
        , tgt.status_sylabusu = src.status_sylabusu
        , tgt.guid = src.guid
*/
;



--
-- dz_punkty_przedmiotow
--
DELETE FROM v2u_dz_punkty_przedmiotow;
COMMIT;
@@merges/dz/dz_punkty_przedmiotow.sql;

DELETE FROM v2u_ko_matched_pktprz_j;
COMMIT;
@@merges/ko/ko_matched_pktprz_j.sql;

DELETE FROM v2u_ko_missing_pktprz_j;
COMMIT;
@@merges/ko/ko_missing_pktprz_j.sql;

DELETE FROM v2u_uu_punkty_przedmiotow;
COMMIT;
@@merges/uu/uu_punkty_przedmiotow.sql;

-- For the FIRST iteration:
--
-- This generates one entry per subject, where feasible. The entry covers all
-- study programs for an unbounded range of semester from min. to infinity.

/*
-- MERGE INTO dz_punkty_przedmiotow tgt
MERGE INTO v2u_dz_punkty_przedmiotow tgt
USING
    (
*/
        WITH uu AS
        (
            SELECT
                  prz_kod
                , SET(CAST(COLLECT(prg_kod ORDER BY prg_kod) AS V2u_Vchars1K_t)) prg_kody1k
                , SET(CAST(COLLECT(tpkt_kod ORDER BY tpkt_kod) AS V2u_Vchars1K_t)) tpkt_kody1k
                , MIN(ilosc) KEEP (DENSE_RANK FIRST ORDER BY ilosc) ilosc
                , SET(CAST(COLLECT(utw_id ORDER BY utw_id) AS V2u_Vchars1K_t)) utw_ids1k
                , SET(CAST(COLLECT(utw_data ORDER BY utw_data) AS V2u_Dates_t)) utw_daty
                , SET(CAST(COLLECT(mod_id ORDER BY mod_id) AS V2u_Vchars1K_t)) mod_ids1k
                , SET(CAST(COLLECT(mod_data ORDER BY mod_data) AS V2u_Dates_t)) mod_daty
                , NULL id
                , MIN(cdyd_pocz) KEEP (DENSE_RANK FIRST ORDER BY cdyd_pocz) cdyd_pocz
                , MAX(cdyd_kon) KEEP (DENSE_RANK LAST ORDER BY cdyd_kon) cdyd_kon
                , 'I' change_type
                , 1 safe_to_change
            FROM v2u_uu_punkty_przedmiotow
            WHERE
                    change_type = 'I'
                AND safe_to_change = 1
            GROUP BY
                    prz_kod
            HAVING
                    COUNT(DISTINCT ilosc) = 1
        )
        SELECT
              uu.prz_kod
            , NULL prg_kod
            , (SELECT VALUE(t) FROM TABLE(uu.tpkt_kody1k) t WHERE ROWNUM <= 1) tpkt_kod
            , uu.ilosc
            , (SELECT VALUE(t) FROM TABLE(uu.utw_ids1k) t WHERE ROWNUM <= 1) utw_id
            , (SELECT VALUE(t) FROM TABLE(uu.utw_daty) t WHERE ROWNUM <= 1) utw_data
            , (SELECT VALUE(t) FROM TABLE(uu.mod_ids1k) t WHERE ROWNUM <= 1) mod_id
            , (SELECT VALUE(t) FROM TABLE(uu.mod_daty) t WHERE ROWNUM <= 1) mod_data
            , uu.id
            , uu.cdyd_pocz
            , NULL cdyd_kon
            , uu.change_type
            , uu.safe_to_change
        FROM uu
        WHERE NOT EXISTS (
                SELECT NULL
                FROM v2u_dz_punkty_przedmiotow dz
                WHERE
                        dz.prz_kod = uu.prz_kod
                    AND COALESCE(dz.cdyd_kon, '9999Z') >= uu.cdyd_pocz
            )
            AND (SELECT COUNT(1) FROM TABLE(uu.tpkt_kody1k)) = 1
            AND (SELECT COUNT(1) FROM TABLE(uu.utw_ids1k)) = 1
/*
    ) src
ON  (
            src.change_type = 'U'
        AND tgt.id = src.id
    )
WHEN NOT MATCHED THEN
    INSERT
        ( prz_kod
        , prg_kod
        , tpkt_kod
        , ilosc
        , utw_id
--        , utw_data
--        , mod_id
--        , mod_data
--       , id
        , cdyd_pocz
        , cdyd_kon
        )
VALUES
        ( src.prz_kod
        , src.prg_kod
        , src.tpkt_kod
        , src.ilosc
        , src.utw_id
--        , src.utw_data
--        , src.mod_id
--        , src.mod_data
--        , src.id
        , src.cdyd_pocz
        , src.cdyd_kon
        )
WHEN MATCHED THEN
    UPDATE SET
          tgt.prz_kod = src.prz_kod
        , tgt.prg_kod = src.prg_kod
        , tgt.tpkt_kod = src.tpkt_kod
        , tgt.ilosc = src.ilosc
--        , tgt.utw_id = src.utw_id
--        , tgt.utw_data = src.utw_data
        , tgt.mod_id = src.mod_id
--        , tgt.mod_data = src.mod_data
--        , tgt.id = src.id
        , tgt.cdyd_pocz = src.cdyd_pocz
        , tgt.cdyd_kon = src.cdyd_kon
*/
;

-- For the SECOND iteration:
--
-- This generates single entry per subject where feasible. The entry will cover
-- all programs for a range of semester from cdyd_min to cdyd_max, where only
-- one value of "ilosc" exists (no collisions with other entries in this range
-- will be generated).

/*
-- MERGE INTO dz_punkty_przedmiotow tgt
MERGE INTO v2u_dz_punkty_przedmiotow tgt
USING
    (
*/
        WITH uu AS
        (
            SELECT
                  prz_kod
                , SET(CAST(COLLECT(prg_kod ORDER BY prg_kod) AS V2u_Vchars1K_t)) prg_kody1k
                , SET(CAST(COLLECT(tpkt_kod ORDER BY tpkt_kod) AS V2u_Vchars1K_t)) tpkt_kody1k
                , ilosc
                , SET(CAST(COLLECT(utw_id ORDER BY utw_id) AS V2u_Vchars1K_t)) utw_ids1k
                , SET(CAST(COLLECT(utw_data ORDER BY utw_data) AS V2u_Dates_t)) utw_daty
                , SET(CAST(COLLECT(mod_id ORDER BY mod_id) AS V2u_Vchars1K_t)) mod_ids1k
                , SET(CAST(COLLECT(mod_data ORDER BY mod_data) AS V2u_Dates_t)) mod_daty
                , NULL id
                , MIN(cdyd_pocz) KEEP (DENSE_RANK FIRST ORDER BY cdyd_pocz) cdyd_pocz
                , MAX(cdyd_kon) KEEP (DENSE_RANK LAST ORDER BY cdyd_kon) cdyd_kon
                , 'I' change_type
                , 1 safe_to_change
            FROM v2u_uu_punkty_przedmiotow pp1
            WHERE
                    change_type = 'I'
                AND safe_to_change = 1
            GROUP BY
                    prz_kod
                  , ilosc
        )
        SELECT
              uu.prz_kod
            , NULL prg_kod
            , (SELECT VALUE(t) FROM TABLE(uu.tpkt_kody1k) t WHERE ROWNUM <= 1) tpkt_kod
            , uu.ilosc
            , (SELECT VALUE(t) FROM TABLE(uu.utw_ids1k) t WHERE ROWNUM <= 1) utw_id
            , (SELECT VALUE(t) FROM TABLE(uu.utw_daty) t WHERE ROWNUM <= 1) utw_data
            , (SELECT VALUE(t) FROM TABLE(uu.mod_ids1k) t WHERE ROWNUM <= 1) mod_id
            , (SELECT VALUE(t) FROM TABLE(uu.mod_daty) t WHERE ROWNUM <= 1) mod_data
            , uu.id
            , uu.cdyd_pocz
            , uu.cdyd_kon
            , uu.change_type
            , uu.safe_to_change
        FROM uu
        WHERE NOT EXISTS (
                -- exclude entries that would generate collisions
                SELECT NULL
                FROM v2u_dz_punkty_przedmiotow dz
                WHERE
                        uu.prz_kod = dz.prz_kod
                    AND NOT (
                            COALESCE(uu.cdyd_kon, '9999Z') < dz.cdyd_pocz
                        OR  uu.cdyd_pocz > COALESCE(dz.cdyd_kon, '9999Z')
                    )

                UNION ALL

                SELECT NULL
                FROM v2u_uu_punkty_przedmiotow vv
                WHERE
                        vv.change_type = 'I'
                    AND vv.safe_to_change = 1
                    AND vv.prz_kod = uu.prz_kod
                    AND vv.ilosc <> uu.ilosc
                    AND NOT (
                            COALESCE(uu.cdyd_kon, '9999Z') < vv.cdyd_pocz
                        OR  uu.cdyd_pocz > COALESCE(vv.cdyd_kon, '9999Z')
                    )
            )
            AND (SELECT COUNT(1) FROM TABLE(uu.tpkt_kody1k)) = 1
            AND (SELECT COUNT(1) FROM TABLE(uu.utw_ids1k)) = 1
/*
    ) src
ON  (
            src.change_type = 'U'
        AND tgt.id = src.id
    )
WHEN NOT MATCHED THEN
    INSERT
        ( prz_kod
        , prg_kod
        , tpkt_kod
        , ilosc
        , utw_id
--        , utw_data
--        , mod_id
--        , mod_data
--       , id
        , cdyd_pocz
        , cdyd_kon
        )
VALUES
        ( src.prz_kod
        , src.prg_kod
        , src.tpkt_kod
        , src.ilosc
        , src.utw_id
--        , src.utw_data
--        , src.mod_id
--        , src.mod_data
--        , src.id
        , src.cdyd_pocz
        , src.cdyd_kon
        )
WHEN MATCHED THEN
    UPDATE SET
          tgt.prz_kod = src.prz_kod
        , tgt.prg_kod = src.prg_kod
        , tgt.tpkt_kod = src.tpkt_kod
        , tgt.ilosc = src.ilosc
--        , tgt.utw_id = src.utw_id
--        , tgt.utw_data = src.utw_data
        , tgt.mod_id = src.mod_id
--        , tgt.mod_data = src.mod_data
--        , tgt.id = src.id
        , tgt.cdyd_pocz = src.cdyd_pocz
        , tgt.cdyd_kon = src.cdyd_kon
*/
;


-- For the THIRD iteration:
--
-- This generates all remaining entries (that were not covered by FIRST and
-- SECOND iterations). A separate entry is generated for distinct prz_kod,
-- prg_kod, and cdyd_pocz = cdyd_kon.

/*
-- MERGE INTO dz_punkty_przedmiotow tgt
MERGE INTO v2u_dz_punkty_przedmiotow tgt
USING
    (
*/
        SELECT
              prz_kod
            , prg_kod
            , tpkt_kod
            , ilosc
            , utw_id
            , utw_data
            , mod_id
            , mod_data
            , id
            , cdyd_pocz
            , cdyd_kon
            , change_type
            , safe_to_change
        FROM v2u_uu_punkty_przedmiotow
        WHERE change_type IN ('I', 'U') AND safe_to_change = 1
/*
    ) src
ON  (
            src.change_type = 'U'
        AND tgt.id = src.id
    )
WHEN NOT MATCHED THEN
    INSERT
        ( prz_kod
        , prg_kod
        , tpkt_kod
        , ilosc
        , utw_id
--        , utw_data
--        , mod_id
--        , mod_data
--       , id
        , cdyd_pocz
        , cdyd_kon
        )
VALUES
        ( src.prz_kod
        , src.prg_kod
        , src.tpkt_kod
        , src.ilosc
        , src.utw_id
--        , src.utw_data
--        , src.mod_id
--        , src.mod_data
--        , src.id
        , src.cdyd_pocz
        , src.cdyd_kon
        )
WHEN MATCHED THEN
    UPDATE SET
          tgt.prz_kod = src.prz_kod
        , tgt.prg_kod = src.prg_kod
        , tgt.tpkt_kod = src.tpkt_kod
        , tgt.ilosc = src.ilosc
--        , tgt.utw_id = src.utw_id
--        , tgt.utw_data = src.utw_data
        , tgt.mod_id = src.mod_id
--        , tgt.mod_data = src.mod_data
--        , tgt.id = src.id
        , tgt.cdyd_pocz = src.cdyd_pocz
        , tgt.cdyd_kon = src.cdyd_kon
*/
;


--
-- dz_zajecia_cykli
--
DELETE FROM v2u_dz_zajecia_cykli;
COMMIT;
@@merges/dz/dz_zajecia_cykli.sql;

DELETE FROM v2u_ko_matched_zajcykl_j;
COMMIT;
@@merges/ko/ko_matched_zajcykl_j.sql;

DELETE FROM v2u_ko_missing_zajcykl_j;
COMMIT;
@@merges/ko/ko_missing_zajcykl_j.sql;

DELETE FROM v2u_uu_zajecia_cykli;
COMMIT;
@@merges/uu/uu_zajecia_cykli.sql;

/*
-- MERGE INTO dz_zajecia_cykli tgt
MERGE INTO v2u_dz_zajecia_cykli tgt
USING
    (
*/
        SELECT
              id
            , prz_kod
            , cdyd_kod
            , tzaj_kod
            , liczba_godz
            , limit_miejsc
            , utw_id
            , utw_data
            , mod_id
            , mod_data
            , waga_pensum
            , tpro_kod
            , efekty_uczenia
            , efekty_uczenia_ang
            , kryteria_oceniania
            , kryteria_oceniania_ang
            , url
            , zakres_tematow
            , zakres_tematow_ang
            , metody_dyd
            , metody_dyd_ang
            , literatura
            , literatura_ang
            , czy_pokazywac_termin
            , change_type
            , safe_to_change
        FROM v2u_uu_zajecia_cykli
        WHERE change_type IN ('I', 'U') AND safe_to_change = 1
/*
    ) src
ON  (
            src.change_type = 'U'
        AND tgt.id = src.id
    )
WHEN NOT MATCHED THEN
    INSERT
        ( prz_kod
        , cdyd_kod
        , tzaj_kod
        , liczba_godz
        , limit_miejsc
        , utw_id
--        , utw_data
--        , mod_id
--        , mod_data
        , waga_pensum
        , tpro_kod
        , efekty_uczenia
        , efekty_uczenia_ang
        , kryteria_oceniania
        , kryteria_oceniania_ang
        , url
        , zakres_tematow
        , zakres_tematow_ang
        , metody_dyd
        , metody_dyd_ang
        , literatura
        , literatura_ang
        , czy_pokazywac_termin
--        , id
        )
VALUES
        ( src.prz_kod
        , src.cdyd_kod
        , src.tzaj_kod
        , src.liczba_godz
        , src.limit_miejsc
        , src.utw_id
--        , src.utw_data
--        , src.mod_id
--        , src.mod_data
        , src.waga_pensum
        , src.tpro_kod
        , src.efekty_uczenia
        , src.efekty_uczenia_ang
        , src.kryteria_oceniania
        , src.kryteria_oceniania_ang
        , src.url
        , src.zakres_tematow
        , src.zakres_tematow_ang
        , src.metody_dyd
        , src.metody_dyd_ang
        , src.literatura
        , src.literatura_ang
        , src.czy_pokazywac_termin
--        , src.id
        )
WHEN MATCHED THEN
    UPDATE SET
          tgt.prz_kod = src.prz_kod
        , tgt.cdyd_kod = src.cdyd_kod
        , tgt.tzaj_kod = src.tzaj_kod
        , tgt.liczba_godz = src.liczba_godz
        , tgt.limit_miejsc = src.limit_miejsc
--        , tgt.utw_id = src.utw_id
--        , tgt.utw_data = src.utw_data
        , tgt.mod_id = src.mod_id
--        , tgt.mod_data = src.mod_data
        , tgt.waga_pensum = src.waga_pensum
        , tgt.tpro_kod = src.tpro_kod
        , tgt.efekty_uczenia = src.efekty_uczenia
        , tgt.efekty_uczenia_ang = src.efekty_uczenia_ang
        , tgt.kryteria_oceniania = src.kryteria_oceniania
        , tgt.kryteria_oceniania_ang = src.kryteria_oceniania_ang
        , tgt.url = src.url
        , tgt.zakres_tematow = src.zakres_tematow
        , tgt.zakres_tematow_ang = src.zakres_tematow_ang
        , tgt.metody_dyd = src.metody_dyd
        , tgt.metody_dyd_ang = src.metody_dyd_ang
        , tgt.literatura = src.literatura
        , tgt.literatura_ang = src.literatura_ang
        , tgt.czy_pokazywac_termin = src.czy_pokazywac_termin
--        , tgt.id = src.id
*/
;

--
-- dz_grupy
--
DELETE FROM v2u_dz_grupy;
COMMIT;
@@merges/dz/dz_grupy.sql;

DELETE FROM v2u_ko_matched_grupy_j;
COMMIT;
@@merges/ko/ko_matched_grupy_j.sql;

DELETE FROM v2u_ko_missing_grupy_j;
COMMIT;
@@merges/ko/ko_missing_grupy_j.sql;

DELETE FROM v2u_uu_grupy;
COMMIT;
@@merges/uu/uu_grupy.sql;


--
-- dz_osoby_grup
--
DELETE FROM v2u_dz_osoby_grup;
COMMIT;
@@merges/dz/dz_osoby_grup.sql;

DELETE FROM v2u_ko_matched_osgrp_j;
COMMIT;
@@merges/ko/ko_matched_osgrp_j.sql;

DELETE FROM v2u_ko_missing_osgrp_j;
COMMIT;
@@merges/ko/ko_missing_osgrp_j.sql;

DELETE FROM v2u_uu_osoby_grup;
COMMIT;
@@merges/uu/uu_osoby_grup.sql;


--
-- dz_zajecia_prz_obcych
--
DELETE FROM v2u_dz_zajecia_prz_obcych;
COMMIT;
@@merges/dz/dz_zajecia_prz_obcych.sql;


--
-- dz_programy
--
DELETE FROM v2u_dz_programy;
COMMIT;
@@merges/dz/dz_programy.sql;


--
-- dz_programy_osob
--
DELETE FROM v2u_dz_programy_osob;
COMMIT;
@@merges/dz/dz_programy_osob.sql;

DELETE FROM v2u_ko_matched_prgos_j;
COMMIT;
@@merges/ko/ko_matched_prgos_j.sql;

DELETE FROM v2u_ko_missing_prgos_j;
COMMIT;
@@merges/ko/ko_missing_prgos_j.sql;

DELETE FROM v2u_uu_programy_osob;
COMMIT;
@@merges/uu/uu_programy_osob.sql;

--
-- dz_decyzje
--
DELETE FROM v2u_dz_decyzje;
COMMIT;
@@merges/dz/dz_decyzje.sql;


--
-- dz_etapy
--
DELETE FROM v2u_dz_etapy;
COMMIT;
@@merges/dz/dz_etapy.sql;


--
-- dz_etapy_programow
--
DELETE FROM v2u_dz_etapy_programow;
COMMIT;
@@merges/dz/dz_etapy_programow.sql;


--
-- dz_etapy_kierunkow
--
DELETE FROM v2u_dz_etapy_kierunkow;
COMMIT;
@@merges/dz/dz_etapy_kierunkow.sql;


--
-- dz_etapy_osob
--
DELETE FROM v2u_dz_etapy_osob;
COMMIT;
@@merges/dz/dz_etapy_osob.sql;


--
-- dz_zaliczenia_przedmiotow
--
DELETE FROM v2u_dz_zaliczenia_przedmiotow;
COMMIT;
@@merges/dz/dz_zaliczenia_przedmiotow.sql;

DELETE FROM v2u_ko_matched_zalprz_j;
COMMIT;
@@merges/ko/ko_matched_zalprz_j.sql;

DELETE FROM v2u_ko_missing_zalprz_j;
COMMIT;
@@merges/ko/ko_missing_zalprz_j.sql;

DELETE FROM v2u_uu_zaliczenia_przedmiotow;
COMMIT;
@@merges/uu/uu_zaliczenia_przedmiotow.sql;


/*
-- MERGE INTO dz_zaliczenia_przedmiotow tgt
MERGE INTO v2u_dz_zaliczenia_przedmiotow tgt
USING
    (
*/
        SELECT
              status_rej
            , opis_statusu_rej
            , status_zal
            , opis_statusu_zal
            , suma_ocen
            , liczba_ocen
            , os_id
            , cdyd_kod
            , prz_kod
            , utw_data
            , utw_id
            , mod_id
            , mod_data
            , nr_wyb
        FROM v2u_uu_zaliczenia_przedmiotow
        WHERE change_type IN ('I', 'U') AND safe_to_change = 1
/*
    ) src
ON  (
            src.change_type = 'U'
        AND src.os_id = tgt.os_id
        AND src.cdyd_kod = tgt.cdyd_kod
        AND src.prz_kod = tgt.prz_kod
    )
WHEN NOT MATCHED THEN
    INSERT
        ( status_rej
        , opis_statusu_rej
        , status_zal
        , opis_statusu_zal
        , suma_ocen
        , liczba_ocen
        , os_id
        , cdyd_kod
        , prz_kod
--        , utw_data
        , utw_id
--        , mod_id
--        , mod_data
        , nr_wyb
        )
VALUES
        ( src.status_rej
        , src.opis_statusu_rej
        , src.status_zal
        , src.opis_statusu_zal
        , src.suma_ocen
        , src.liczba_ocen
        , src.os_id
        , src.cdyd_kod
        , src.prz_kod
--        , src.utw_data
        , src.utw_id
--        , src.mod_id
--        , src.mod_data
        , src.nr_wyb
        )
WHEN MATCHED THEN
    UPDATE SET
          tgt.status_rej = src.status_rej
        , tgt.opis_statusu_rej = src.opis_statusu_rej
        , tgt.status_zal = src.status_zal
        , tgt.opis_statusu_zal = src.opis_statusu_zal
        , tgt.suma_ocen = src.suma_ocen
        , tgt.liczba_ocen = src.liczba_ocen
--        , tgt.os_id = src.os_id
--        , tgt.cdyd_kod = src.cdyd_kod
--        , tgt.prz_kod = src.prz_kod
--        , tgt.utw_data = src.utw_data
--        , tgt.utw_id = src.utw_id
        , tgt.mod_id = src.mod_id
--        , tgt.mod_data = src.mod_data
        , tgt.nr_wyb = src.nr_wyb
*/
;

--
-- dz_zal_przedm_prgos
--
DELETE FROM v2u_dz_zal_przedm_prgos;
COMMIT;
@@merges/dz/dz_zal_przedm_prgos.sql;


--
-- dz_oceny
--
DELETE FROM v2u_dz_oceny;
COMMIT;
@@merges/dz/dz_oceny.sql;


--
-- dz_wartosci_ocen
--
DELETE FROM v2u_dz_wartosci_ocen;
COMMIT;
@@merges/dz/dz_wartosci_ocen.sql;


--
-- dz_terminy_protokolow
--
DELETE FROM v2u_dz_terminy_protokolow;
COMMIT;
@@merges/dz/dz_terminy_protokolow.sql;


--
-- dz_protokoly
--
DELETE FROM v2u_dz_protokoly;
COMMIT;
@@merges/dz/dz_protokoly.sql;



-- vim: set ft=sql ts=4 sw=4 et:
